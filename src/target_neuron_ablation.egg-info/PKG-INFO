Metadata-Version: 2.2
Name: target_neuron_ablation
Version: 0.1.dev9+g5cd38c5.d20250220
Summary: A detailed comparison between human (CDI) and model performance at the lexical level
Author-email: Jing Liu <jing.liu@psl.eu>
License: MIT License
Project-URL: documentation, https://github.com/Jing-L97/target_neuron_ablation
Project-URL: repository, https://github.com/Jing-L97/target_neuron_ablation
Keywords: python
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: accelerate==0.24.1
Requires-Dist: beautifulsoup4==4.12.2
Requires-Dist: datasets==2.15.0
Requires-Dist: eindex==0.1
Requires-Dist: einops==0.7.0
Requires-Dist: fancy-einsum==0.0.3
Requires-Dist: huggingface-hub==0.19.4
Requires-Dist: hydra-core==1.3.2
Requires-Dist: ipykernel==6.26.0
Requires-Dist: ipython==8.12.3
Requires-Dist: jaxtyping==0.2.19
Requires-Dist: kaleido==0.2.1
Requires-Dist: matplotlib==3.7.4
Requires-Dist: numpy==1.24.4
Requires-Dist: nbformat
Requires-Dist: omegaconf==2.3.0
Requires-Dist: pandas==2.0.3
Requires-Dist: plotly==5.18.0
Requires-Dist: pytest==7.4.3
Requires-Dist: rbo==0.1.3
Requires-Dist: safetensors==0.4.2
Requires-Dist: scikit-learn==1.3.2
Requires-Dist: scipy==1.10.1
Requires-Dist: sentencepiece==0.1.99
Requires-Dist: tiktoken==0.5.2
Requires-Dist: tinycss2==1.2.1
Requires-Dist: tokenizers==0.15.0
Requires-Dist: torch==1.13.1
Requires-Dist: torchinfo==1.8.0
Requires-Dist: tornado==6.3.3
Requires-Dist: tqdm==4.66.1
Requires-Dist: transformer-lens==1.14.0
Requires-Dist: transformers==4.38.1
Requires-Dist: transformers-stream-generator==0.0.4

# Confidence Regulation Neurons in Language Models

This repository contains the code for the NeurIPS 2024 paper “Confidence Regulation Neurons in Language Models.”

![Sample Figure](./assets/)

## Setup

To install the required packages, run:

    pip install -r requirements.txt

For accessing gated repositories (e.g., LLaMA), add your HuggingFace token to `./ablations/hf_token.txt`.

## Ablation Experiments

The `ablations/` folder contains code for performing neuron ablation experiments to identify entropy and token frequency neurons. We use Hydra for parameter configuration. The config files are available in ablations/config/. These scripts should be executed from the `ablations` folder.


- `run_and_store_ablation_results.py`: Runs mean ablations to quantify the total vs direct effect for entropy neurons.
- `run_and_store_unigram_results.py`: Runs mean ablations to quantify the total vs direct effect for token frequency neurons.
- `load_results.py` and `load_unigram_results.py`: For visualizing the results of the mean ablation experiments.
- `datasets/`: Contains `.npy` files with token counts for OpenWebText and The Pile, used to compute the token frequency distribution.

## Citing this Work
If you find this work useful in your research, please consider citing our paper:

    @article{
    }

