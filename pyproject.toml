[project]
name = "target_neuron_ablation"
description = "A detailed comparison between human (CDI) and model performance at the lexical level"
authors = [
    { name = "Jing Liu", email = "jing.liu@psl.eu" },
]
license = { text = "MIT License" }
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"
keywords = ["python"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 4 - Beta",
]
dynamic = ["dependencies", "version"]

[project.urls]
documentation = "https://github.com/Jing-L97/target_neuron_ablation"
repository = "https://github.com/Jing-L97/target_neuron_ablation"


[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.packages.find]
where = ["src"]
include = ["neuron_analyzer*"]
exclude = ["src/scripts*", "scripts*", "experiments*"]


[tool.ruff]
target-version = "py311"
line-length = 120
exclude = ["parser.py", "*.pyi"] # Exclude parser.py -> sly does not lint proper


[tool.ruff.lint]
select = ["ALL"] # Be brave use all rules
fixable = ["ALL"]
unfixable = []
# remove the ones that make no sense
ignore = [
    "ARG001",  # No need to type kwargs as they are dynamicly set.
    "NPY002",  # Allow numpy unsafe generations
    "S105",    # ignore hardcoded stuff
    "S107",    # falsely detects hardcoded passwords in code
    "ANN401",  # allow the t.Any type to be used
    "D100",    # allow top doc-string to be missing
    "D401",    # imperative mood in docstring is ambiguous
    "D203", "D213", # Conflicting rules about docstrings
    "S324",    # allow md5, as this is a non critical usage
    "DTZ005",  # no need for timezones in datetimes
    "S603",    # allow subprocess to be called using literals
    "PLR0913", # allow functions to have more tha 12 arguments
    "TRY003",  # allow Exceptions to contain long messages
    "EM101",   # allow Exceptions to contain literals
    "ANN003",  # allow **kwargs to be without type-hints
    "D107", "D105", # allow __init__  and all python __magic__ functions to be without a docstring
    "ANN101", "ANN102", "ANN001",  # "self" & "cls" need no typing (rule is Deprecated)
    "T201", "T203",    # allow 'print' & 'pprint' statements
    "FIX002",  # allow todos
    "TD003",   # not all todos require a issue
    "TD002",   # allow todos without author
    "D104",    # allow scripts not to have docstring on top
    "EM102",   # allow exception to use f-strings
    "DTZ011",  # allow datetimes without timezone
    "PLR2004", # Allow magic numbers (should be avoided, except some math contexts)
    "S311",    # No cryptography done here random is safe enough
    "PD901",   # Allow df variable name
    "COM812",  # Allow trailing comma to be missing
    "G004",    # Allow f-strings in logger (reasonable, but not here)
]


[tool.ruff.lint.flake8-import-conventions.aliases]
typing = "t"

[tool.ruff.per-file-ignores]
"**/tests/**" = [
    "S101",    # Allow assert in test files
    "ANN201",  # Test functions do not need a return type
    "D103",    # Docstring can be redundant in test functions
]


[tool.setuptools_scm]
fallback_version = "0.0.0-dev"